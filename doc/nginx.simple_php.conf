server {
    listen 80;
    listen [::]:80;
    
    root /path/to/myapp/www;
    server_name myIp.xip.io;
    
    
    
    access_log /var/log/nginx/phpsite.com-access.log;
    error_log  /var/log/nginx/phpsite.com-error.log error;
    
    
    
    
    location = /favicon.ico { access_log off; log_not_found off; }
    location = /robots.txt  { access_log off; log_not_found off; }
    location ~* \.(jpg|jpeg|gif|png|css|js|ico|xml)$ {
        access_log        off;
        log_not_found     off;
    }
    
    
    
    charset utf-8;
    index index.php;
    
    
    # Be sure to read carefully the documentation about the try_files directive 
    # http://nginx.org/en/docs/http/ngx_http_core_module.html#try_files.
    # In particular, given the try_files syntax:  
    # 
    #  	try_files file ... uri;
    # 
    # only the uri part can redirect the processing to another block
    # 
    # The $is_args$args suffix passes the query string to the handling block
    # 
    location / {
            try_files $uri /index.php$is_args$args;
    }
    
    
    # The block below is primarily used to allow access to existing php files.
    # However, since in the previous fallback block (/) we made uses redirection to a php file,
    # we need this block anyway
    # Notice that I'm using a dedicated php-fpm pools
    # https://serversforhackers.com/video/php-fpm-multiple-resource-pools
    location ~ \.php$ {
            include snippets/fastcgi-php.conf;
            fastcgi_pass unix:/var/run/php5-fpm-app.sock;
    }
}